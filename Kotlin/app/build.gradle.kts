/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.kotlin.jvm)
    kotlin("plugin.serialization") version "2.0.21"
    id("com.google.devtools.ksp") version "2.1.20-2.0.0"

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    testImplementation(libs.jetbrains.kotlin.test.junit5)

    // Use the JUnit 5 integration.
    testImplementation(libs.junit.jupiter.engine)

    testRuntimeOnly(libs.junit.platform.launcher)

    // This dependency is used by the application.
    implementation(libs.guava)

    // Ktor
    implementation(libs.ktor.client.core)
    implementation(libs.ktor.client.cio)
    implementation(libs.ktor.client.content.negotiation)
    implementation(libs.ktor.serialization.kotlinx.json)

    // Kotlinx datetime
    implementation(libs.kotlinx.datetime)

    // Java native accest
    implementation(libs.java.dev.jna)
    implementation(libs.java.dev.jna.platform)

    // Kotlinx coroutines
    implementation(libs.kotlinx.coroutines.core)

    // Reflect
    implementation(kotlin("reflect")) // Kotlin official reflects
    implementation(libs.org.reflections.reflections) // Extension lib

    // KSP Plc custom processor
    implementation(project(":plc-processor"))
    ksp(project(":plc-processor"))
}

buildscript {
    dependencies {
        classpath(kotlin("gradle-plugin", version = "2.1.20"))
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    group = "com.lestere"
    version = "unspecified"
    mainClass = "com.lestere.AppKt"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}